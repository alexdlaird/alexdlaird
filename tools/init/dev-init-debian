#!/usr/bin/env bash

echo "---------------------------------------------"
echo " Initializing Debian ..."
echo "---------------------------------------------"

sudo apt-get update
sudo apt-get install wget curl unzip apt-transport-https gnupg software-properties-common -yqq

# Provision apt for Docker
sudo install -m 0755 -d /etc/apt/keyrings
sudo curl -fsSL https://download.docker.com/linux/ubuntu/gpg -o /etc/apt/keyrings/docker.asc
sudo chmod a+r /etc/apt/keyrings/docker.asc
echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu \
  $(. /etc/os-release && echo "${UBUNTU_CODENAME:-$VERSION_CODENAME}") stable" \
  | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null

# Provision apt for sbt
echo "deb https://repo.scala-sbt.org/scalasbt/debian all main" \
  | sudo tee /etc/apt/sources.list.d/sbt.list
echo "deb https://repo.scala-sbt.org/scalasbt/debian /" \
  | sudo tee /etc/apt/sources.list.d/sbt_old.list
curl -sL "https://keyserver.ubuntu.com/pks/lookup?op=get&search=0x2EE0EA64E40A89B84B2DF73499E82A75642AC823" | sudo -H gpg --no-default-keyring --keyring gnupg-ring:/etc/apt/trusted.gpg.d/scalasbt-release.gpg --import
sudo chmod 644 /etc/apt/trusted.gpg.d/scalasbt-release.gpg

# Provision apt for terraform
wget -O- https://apt.releases.hashicorp.com/gpg | \
gpg --dearmor \
  | sudo tee /usr/share/keyrings/hashicorp-archive-keyring.gpg > /dev/null
gpg --no-default-keyring \
--keyring /usr/share/keyrings/hashicorp-archive-keyring.gpg \
--fingerprint
echo "deb [signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] \
https://apt.releases.hashicorp.com $(lsb_release -cs) main" \
  | sudo tee /etc/apt/sources.list.d/hashicorp.list

sudo apt-get update
sudo apt-get install --ignore-missing \
                     zsh vim tmux \
                     python3 python3-dev python-is-python3 libjpeg-dev \
                     maven sbt openjdk-8-jdk openjdk-11-jdk openjdk-17-jdk openjdk-21-jdk \
                     docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin \
                     ffmpeg gettext vlc libmp3lame0 \
                     openssl ca-certificates \
                     gh terraform
sudo apt-get autoremove

if ! command -v aws 2>&1 >/dev/null; then
  # Install aws
  curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
  unzip awscliv2.zip
  sudo ./aws/install
  sudo rm -rf awscliv2.zip aws
fi

if ! command -v twilio 2>&1 >/dev/null; then
  # Install twilio
  curl -L "https://runtime-cli-redirect-6533.twil.io/redirect-to-github?ext=.deb" -o "twilio.deb"
  sudo apt-get install ./twilio.deb
  sudo rm twilio.deb
fi

if ! command -v sdk 2>&1 >/dev/null; then
  # Install sdk
  curl -s "https://get.sdkman.io" | bash
fi

if ! command -v pyenv 2>&1 >/dev/null; then
  # Install pyenv
  curl -fsSL https://pyenv.run | bash
fi

if ! command -v jenv 2>&1 >/dev/null; then
  # Install jenv
  git clone https://github.com/jenv/jenv.git $HOME/.jenv
fi

if [ ! -d "$HOME/.autoenv" ]; then
  # Install autoenv
  wget --show-progress -o /dev/null -O- 'https://raw.githubusercontent.com/hyperupcall/autoenv/master/scripts/install.sh' | sh
fi

if ! command -v nvm 2>&1 >/dev/null; then
  # Install nvm
  curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.40.2/install.sh | bash
fi

echo "---------------------------------------------"
echo " ... finished Debian setup"
echo "---------------------------------------------"
